name: Integration Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, labeled]

permissions:
  contents: read
  packages: read

jobs:
  integration:
    name: Integration & Performance Tests
    runs-on: ubuntu-latest
    env:
      # Make explicit for tests that honor env vars
      REDIS_URL: redis://127.0.0.1:6379
      POSTGRES_URL: postgres://postgres@127.0.0.1:5432/syncguard

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: syncguard
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d syncguard"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "25"

      - run: bun install --frozen-lockfile
      - run: bun run build

      # Launch Firestore emulator
      - run: bun firebase emulators:start --only firestore & echo $! > emulator.pid

      # Ensure services are reachable (ports open) before tests
      - name: Wait for Redis (6379)
        run: for i in {1..30}; do nc -z 127.0.0.1 6379 && break || sleep 1; done
      - name: Wait for Postgres (5432)
        run: for i in {1..60}; do nc -z 127.0.0.1 5432 && break || sleep 1; done

      - run: bun run test:integration
      - run: bun run test:performance

      - name: Kill Firestore emulator
        if: always()
        run: |
          if [ -f emulator.pid ]; then
            kill $(cat emulator.pid) || true
            rm emulator.pid
            echo "Emulator killed"
          fi
